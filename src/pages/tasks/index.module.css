/* Tasks页面 CSS Modules 样式 */

.tasksPage {
  min-height: 100vh;
  background-color: var(--bg-primary);
  display: flex;
  flex-direction: column;
}

.tasksFilter {
  background-color: white;
  padding: var(--spacing-md) 0;
  box-shadow: var(--shadow-sm);
  position: sticky;
  top: 0;
  z-index: var(--z-index-sticky);
}

.tasksFilterScroll {
  white-space: nowrap;
}

.tasksFilterList {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-sm);
  padding: 0 var(--spacing-md);
}

.filterTag {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-xs) var(--spacing-md);
  border-radius: var(--border-radius-xl);
  background-color: var(--gray-100);
  cursor: pointer;
  transition: var(--transition-base);
  white-space: nowrap;
  flex-shrink: 0;
}

.filterTag:hover {
  background-color: var(--gray-200);
}

.filterTagActive {
  background-color: var(--primary);
  color: white;
}

.filterTagActive:hover {
  background-color: color-mix(in srgb, var(--primary) 95%, black);
}

.filterTagLabel {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
}

.filterTagCount {
  font-size: var(--font-size-xs);
  background-color: rgba(255, 255, 255, 0.2);
  padding: 2px 6px;
  border-radius: var(--border-radius-sm);
  min-width: 18px;
  text-align: center;
}

.filterTag:not(.filterTagActive) .filterTagCount {
  background-color: var(--gray-300);
  color: var(--text-secondary);
}

.tasksContent {
  flex: 1;
  padding: var(--spacing-md);
  padding-bottom: calc(var(--spacing-md) + 80px); /* 为FAB留出空间 */
}

.tasksList {
  /* TaskCard 组件自带样式 */
}

.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-xxl);
  text-align: center;
  min-height: 300px;
}

.emptyStateIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  background-color: var(--gray-100);
  margin-bottom: var(--spacing-lg);
}

.emptyStateIcon .iconfont {
  font-size: 2rem;
  color: var(--text-muted);
}

.emptyStateText {
  font-size: var(--font-size-lg);
  color: var(--text-secondary);
  margin-bottom: var(--spacing-lg);
}

.emptyStateBtn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-md) var(--spacing-xl);
  border: none;
  border-radius: var(--border-radius);
  font-weight: var(--font-weight-medium);
  font-size: var(--font-size-base);
  line-height: var(--line-height-normal);
  cursor: pointer;
  transition: var(--transition-base);
  text-decoration: none;
  background-color: var(--primary);
  color: var(--text-light);
}

.emptyStateBtn:hover:not(:disabled) {
  background-color: color-mix(in srgb, var(--primary) 90%, black);
}

.emptyStateBtn:active {
  background-color: color-mix(in srgb, var(--primary) 85%, black);
}

.emptyStateBtn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.tasksFab {
  position: fixed;
  bottom: calc(var(--spacing-lg) + env(safe-area-inset-bottom));
  right: var(--spacing-lg);
  z-index: var(--z-index-fixed);
}

.fabBtn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 56px;
  height: 56px;
  border-radius: 50%;
  background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
  color: white;
  box-shadow: var(--shadow-lg);
  border: none;
  cursor: pointer;
  transition: var(--transition-base);
}

.fabBtn:hover {
  transform: scale(1.1);
  box-shadow: var(--shadow-xl);
}

.fabBtn:active {
  transform: scale(0.95);
}

.fabBtn .iconfont {
  font-size: var(--font-size-xl);
}

.formModal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: var(--z-index-modal);
  display: flex;
  align-items: center;
  justify-content: center;
}

.formModalBackdrop {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
}

.formModalContent {
  position: relative;
  z-index: 1;
  width: 90%;
  max-width: 600px;
  max-height: 90vh;
  margin: var(--spacing-md);
  overflow-y: auto;
  animation: fadeIn 0.3s ease-in-out;
}

.formModalContent::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}

.formModalContent::-webkit-scrollbar-track {
  background: var(--gray-100);
  border-radius: 3px;
}

.formModalContent::-webkit-scrollbar-thumb {
  background: var(--gray-400);
  border-radius: 3px;
}

.formModalContent::-webkit-scrollbar-thumb:hover {
  background: var(--gray-500);
}

/* 动画 */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* 响应式调整 */
@media (min-width: 576px) {
  .tasksFilter {
    padding: var(--spacing-lg) 0;
  }
  
  .tasksFilterList {
    padding: 0 var(--spacing-lg);
    gap: var(--spacing-md);
  }
  
  .filterTag {
    padding: var(--spacing-sm) var(--spacing-lg);
  }
  
  .filterTagLabel {
    font-size: var(--font-size-base);
  }
  
  .filterTagCount {
    font-size: var(--font-size-sm);
    padding: 4px 8px;
    min-width: 24px;
  }
  
  .tasksContent {
    padding: var(--spacing-lg);
    padding-bottom: calc(var(--spacing-lg) + 80px);
  }
  
  .tasksFab {
    bottom: calc(var(--spacing-xl) + env(safe-area-inset-bottom));
    right: var(--spacing-xl);
  }
  
  .fabBtn {
    width: 64px;
    height: 64px;
  }
  
  .fabBtn .iconfont {
    font-size: var(--font-size-xxl);
  }
  
  .emptyState {
    padding: var(--spacing-xxl) var(--spacing-lg);
  }
  
  .emptyStateIcon {
    width: 100px;
    height: 100px;
  }
  
  .emptyStateIcon .iconfont {
    font-size: 2.5rem;
  }
  
  .emptyStateText {
    font-size: var(--font-size-xl);
  }
}